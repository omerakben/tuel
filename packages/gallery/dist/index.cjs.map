{"version":3,"sources":["../src/index.ts","../src/components/ImageGallery.tsx","../src/components/Carousel.tsx","../src/components/VideoGallery.tsx","../src/components/MediaGrid.tsx"],"sourcesContent":["// Image Gallery Components\nexport { ImageGallery } from './components/ImageGallery';\nexport type {\n  GalleryImage,\n  ImageGalleryProps\n} from './components/ImageGallery';\n\n// Carousel Components\nexport { Carousel } from './components/Carousel';\nexport type {\n  CarouselSlide,\n  CarouselProps\n} from './components/Carousel';\n\n// Video Gallery Components\nexport { VideoGallery } from './components/VideoGallery';\nexport type {\n  VideoItem,\n  VideoGalleryProps\n} from './components/VideoGallery';\n\n// Media Grid Components\nexport { MediaGrid } from './components/MediaGrid';\nexport type {\n  MediaItem,\n  MediaGridProps\n} from './components/MediaGrid';\n","import { cn, isClient } from \"@tuel/utils\";\nimport { AnimatePresence, motion } from \"framer-motion\";\nimport { gsap } from \"gsap\";\nimport { CSSProperties, useEffect, useRef, useState } from \"react\";\n\nexport interface GalleryImage {\n  id: string;\n  src: string;\n  alt: string;\n  title?: string;\n  description?: string;\n  width?: number;\n  height?: number;\n}\n\nexport interface ImageGalleryProps {\n  images: GalleryImage[];\n  className?: string;\n  layout?: \"grid\" | \"masonry\" | \"carousel\" | \"stack\" | \"justified\";\n  columns?: number;\n  gap?: number;\n  animationType?: \"fade\" | \"slide\" | \"scale\" | \"flip\" | \"reveal\";\n  hoverEffect?: \"zoom\" | \"tilt\" | \"overlay\" | \"parallax\" | \"lift\" | \"blur\";\n  lightbox?: boolean;\n  lazy?: boolean;\n  aspectRatio?: \"auto\" | \"square\" | \"4/3\" | \"16/9\" | \"21/9\";\n  onClick?: (image: GalleryImage, index: number) => void;\n  onImageLoad?: (image: GalleryImage, index: number) => void;\n  infinite?: boolean;\n  autoPlay?: boolean;\n  autoPlayInterval?: number;\n}\n\nexport function ImageGallery({\n  images,\n  className,\n  layout = \"grid\",\n  columns = 3,\n  gap = 16,\n  animationType = \"fade\",\n  hoverEffect = \"zoom\",\n  lightbox = true,\n  lazy = true,\n  aspectRatio = \"auto\",\n  onClick,\n  onImageLoad,\n  infinite = false,\n  autoPlay = false,\n  autoPlayInterval = 3000,\n}: ImageGalleryProps) {\n  const [selectedImage, setSelectedImage] = useState<GalleryImage | null>(null);\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const [loadedImages, setLoadedImages] = useState<Set<string>>(new Set());\n  const galleryRef = useRef<HTMLDivElement>(null);\n  const itemsRef = useRef<HTMLDivElement[]>([]);\n\n  // Auto play functionality for carousel\n  useEffect(() => {\n    if (!autoPlay || layout !== \"carousel\") return;\n\n    const interval = setInterval(() => {\n      setCurrentIndex((prev) => (prev + 1) % images.length);\n    }, autoPlayInterval);\n\n    return () => clearInterval(interval);\n  }, [autoPlay, autoPlayInterval, images.length, layout]);\n\n  // Animation variants\n  const getAnimationVariants = () => {\n    switch (animationType) {\n      case \"slide\":\n        return {\n          hidden: { x: -100, opacity: 0 },\n          visible: { x: 0, opacity: 1 },\n          exit: { x: 100, opacity: 0 },\n        };\n      case \"scale\":\n        return {\n          hidden: { scale: 0.8, opacity: 0 },\n          visible: { scale: 1, opacity: 1 },\n          exit: { scale: 0.8, opacity: 0 },\n        };\n      case \"flip\":\n        return {\n          hidden: { rotateY: 90, opacity: 0 },\n          visible: { rotateY: 0, opacity: 1 },\n          exit: { rotateY: -90, opacity: 0 },\n        };\n      case \"reveal\":\n        return {\n          hidden: { clipPath: \"inset(100% 0 0 0)\", opacity: 0 },\n          visible: { clipPath: \"inset(0% 0 0 0)\", opacity: 1 },\n          exit: { clipPath: \"inset(0 0 100% 0)\", opacity: 0 },\n        };\n      default:\n        return {\n          hidden: { opacity: 0 },\n          visible: { opacity: 1 },\n          exit: { opacity: 0 },\n        };\n    }\n  };\n\n  // Layout styles\n  const getLayoutStyles = (): CSSProperties => {\n    const baseStyles: CSSProperties = {\n      gap: `${gap}px`,\n    };\n\n    switch (layout) {\n      case \"grid\":\n        return {\n          ...baseStyles,\n          display: \"grid\",\n          gridTemplateColumns: `repeat(auto-fill, minmax(${Math.floor(\n            300 / columns\n          )}px, 1fr))`,\n        };\n      case \"masonry\":\n        return {\n          ...baseStyles,\n          display: \"grid\",\n          gridTemplateColumns: `repeat(${columns}, 1fr)`,\n          gridAutoRows: \"auto\",\n        };\n      case \"carousel\":\n        return {\n          ...baseStyles,\n          display: \"flex\",\n          overflowX: \"auto\" as const,\n          scrollSnapType: \"x mandatory\" as const,\n        };\n      case \"stack\":\n        return {\n          ...baseStyles,\n          display: \"grid\",\n          gridTemplateColumns: \"1fr\",\n        };\n      case \"justified\":\n        return {\n          ...baseStyles,\n          display: \"flex\",\n          flexWrap: \"wrap\",\n          justifyContent: \"space-between\",\n        };\n      default:\n        return baseStyles;\n    }\n  };\n\n  // Hover effect handlers\n  const handleMouseEnter = (index: number) => {\n    if (!isClient) return;\n    const item = itemsRef.current[index];\n    if (!item) return;\n\n    switch (hoverEffect) {\n      case \"zoom\":\n        gsap.to(item.querySelector(\"img\"), {\n          scale: 1.1,\n          duration: 0.3,\n          ease: \"power2.out\",\n        });\n        break;\n      case \"tilt\":\n        gsap.to(item, {\n          rotationY: 5,\n          rotationX: 5,\n          duration: 0.3,\n          ease: \"power2.out\",\n        });\n        break;\n      case \"parallax\":\n        gsap.to(item.querySelector(\"img\"), {\n          y: -10,\n          duration: 0.3,\n          ease: \"power2.out\",\n        });\n        break;\n      case \"lift\":\n        gsap.to(item, {\n          y: -10,\n          rotationX: 15,\n          duration: 0.3,\n          ease: \"power2.out\",\n        });\n        break;\n      case \"blur\":\n        gsap.to(item.querySelector(\"img\"), {\n          filter: \"blur(2px)\",\n          duration: 0.3,\n        });\n        break;\n    }\n  };\n\n  const handleMouseLeave = (index: number) => {\n    if (!isClient) return;\n    const item = itemsRef.current[index];\n    if (!item) return;\n\n    gsap.to(item.querySelector(\"img\"), {\n      scale: 1,\n      y: 0,\n      filter: \"blur(0px)\",\n      duration: 0.3,\n      ease: \"power2.out\",\n    });\n\n    gsap.to(item, {\n      rotationY: 0,\n      rotationX: 0,\n      y: 0,\n      duration: 0.3,\n      ease: \"power2.out\",\n    });\n  };\n\n  // Image load handler\n  const handleImageLoad = (image: GalleryImage, index: number) => {\n    setLoadedImages((prev) => new Set(prev).add(image.id));\n    onImageLoad?.(image, index);\n  };\n\n  // Click handler\n  const handleImageClick = (image: GalleryImage, index: number) => {\n    if (lightbox) {\n      setSelectedImage(image);\n    }\n    onClick?.(image, index);\n  };\n\n  // Aspect ratio class\n  const getAspectRatioClass = () => {\n    switch (aspectRatio) {\n      case \"square\":\n        return \"aspect-square\";\n      case \"4/3\":\n        return \"aspect-[4/3]\";\n      case \"16/9\":\n        return \"aspect-video\";\n      case \"21/9\":\n        return \"aspect-[21/9]\";\n      default:\n        return \"\";\n    }\n  };\n\n  const variants = getAnimationVariants();\n\n  return (\n    <>\n      <div\n        ref={galleryRef}\n        className={cn(\"gallery-container\", className)}\n        style={getLayoutStyles()}\n      >\n        {images.map((image, index) => (\n          <motion.div\n            key={image.id}\n            ref={(el) => {\n              if (el) itemsRef.current[index] = el;\n            }}\n            initial=\"hidden\"\n            animate=\"visible\"\n            exit=\"exit\"\n            variants={variants}\n            transition={{ delay: index * 0.1 }}\n            className={cn(\n              \"gallery-item cursor-pointer relative overflow-hidden rounded-lg\",\n              \"transform-gpu will-change-transform\",\n              layout === \"stack\" && \"absolute inset-0\",\n              getAspectRatioClass(),\n              hoverEffect === \"overlay\" && \"group\"\n            )}\n            style={layout === \"stack\" ? { zIndex: images.length - index } : {}}\n            onMouseEnter={() => handleMouseEnter(index)}\n            onMouseLeave={() => handleMouseLeave(index)}\n            onClick={() => handleImageClick(image, index)}\n          >\n            <img\n              src={image.src}\n              alt={image.alt}\n              className={cn(\n                \"w-full h-full object-cover transition-all duration-300\",\n                !loadedImages.has(image.id) && lazy && \"opacity-0\"\n              )}\n              loading={lazy ? \"lazy\" : \"eager\"}\n              onLoad={() => handleImageLoad(image, index)}\n            />\n\n            {/* Title and description overlay */}\n            {(image.title || image.description) && (\n              <div className=\"absolute inset-0 bg-gradient-to-t from-black/70 to-transparent opacity-0 group-hover:opacity-100 transition-opacity duration-300 flex items-end p-4\">\n                <div className=\"text-white\">\n                  {image.title && (\n                    <h3 className=\"text-lg font-semibold mb-1\">\n                      {image.title}\n                    </h3>\n                  )}\n                  {image.description && (\n                    <p className=\"text-sm opacity-90\">{image.description}</p>\n                  )}\n                </div>\n              </div>\n            )}\n\n            {/* Hover overlay effect */}\n            {hoverEffect === \"overlay\" && (\n              <div className=\"absolute inset-0 bg-black bg-opacity-0 group-hover:bg-opacity-30 transition-all duration-300 flex items-center justify-center\">\n                <div className=\"text-white opacity-0 group-hover:opacity-100 transition-opacity\">\n                  <svg\n                    className=\"w-8 h-8\"\n                    fill=\"none\"\n                    stroke=\"currentColor\"\n                    viewBox=\"0 0 24 24\"\n                  >\n                    <path\n                      strokeLinecap=\"round\"\n                      strokeLinejoin=\"round\"\n                      strokeWidth={2}\n                      d=\"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\"\n                    />\n                  </svg>\n                </div>\n              </div>\n            )}\n          </motion.div>\n        ))}\n      </div>\n\n      {/* Lightbox */}\n      {lightbox && (\n        <AnimatePresence>\n          {selectedImage && (\n            <motion.div\n              initial={{ opacity: 0 }}\n              animate={{ opacity: 1 }}\n              exit={{ opacity: 0 }}\n              className=\"fixed inset-0 z-50 bg-black bg-opacity-90 flex items-center justify-center p-8\"\n              onClick={() => setSelectedImage(null)}\n            >\n              <motion.img\n                initial={{ scale: 0.8 }}\n                animate={{ scale: 1 }}\n                exit={{ scale: 0.8 }}\n                src={selectedImage.src}\n                alt={selectedImage.alt}\n                className=\"max-w-full max-h-full object-contain\"\n                onClick={(e) => e.stopPropagation()}\n              />\n\n              {/* Close button */}\n              <button\n                className=\"absolute top-4 right-4 text-white text-2xl hover:text-gray-300 transition-colors\"\n                onClick={() => setSelectedImage(null)}\n              >\n                ×\n              </button>\n\n              {/* Image info */}\n              {(selectedImage.title || selectedImage.description) && (\n                <div className=\"absolute bottom-4 left-4 text-white\">\n                  {selectedImage.title && (\n                    <h3 className=\"text-xl font-bold mb-2\">\n                      {selectedImage.title}\n                    </h3>\n                  )}\n                  {selectedImage.description && (\n                    <p className=\"text-gray-300\">{selectedImage.description}</p>\n                  )}\n                </div>\n              )}\n            </motion.div>\n          )}\n        </AnimatePresence>\n      )}\n    </>\n  );\n}\n","import { cn } from \"@tuel/utils\";\nimport { AnimatePresence, motion, PanInfo } from \"framer-motion\";\nimport { ReactNode, useCallback, useEffect, useRef, useState } from \"react\";\n\nexport interface CarouselSlide {\n  id: string;\n  content: ReactNode;\n  image?: string;\n  title?: string;\n  description?: string;\n  href?: string;\n}\n\nexport interface CarouselProps {\n  slides: CarouselSlide[];\n  className?: string;\n  variant?: \"fade\" | \"slide\" | \"scale\" | \"3d\" | \"stack\" | \"coverflow\";\n  autoPlay?: boolean;\n  autoPlayInterval?: number;\n  loop?: boolean;\n  showIndicators?: boolean;\n  showArrows?: boolean;\n  draggable?: boolean;\n  direction?: \"horizontal\" | \"vertical\";\n  slidesPerView?: number;\n  spacing?: number;\n  pauseOnHover?: boolean;\n  effect?: \"slide\" | \"fade\" | \"cube\" | \"flip\" | \"cards\";\n  onSlideChange?: (index: number) => void;\n  onSlideClick?: (slide: CarouselSlide, index: number) => void;\n}\n\nexport function Carousel({\n  slides,\n  className,\n  variant = \"slide\",\n  autoPlay = false,\n  autoPlayInterval = 5000,\n  loop = true,\n  showIndicators = true,\n  showArrows = true,\n  draggable = true,\n  direction = \"horizontal\",\n  slidesPerView = 1,\n  spacing = 0,\n  pauseOnHover = true,\n  effect = \"slide\",\n  onSlideChange,\n  onSlideClick,\n}: CarouselProps) {\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const [isDragging, setIsDragging] = useState(false);\n  const [isPlaying, setIsPlaying] = useState(autoPlay);\n  const containerRef = useRef<HTMLDivElement>(null);\n  const intervalRef = useRef<NodeJS.Timeout>();\n\n  // Auto play functionality\n  const startAutoPlay = useCallback(() => {\n    if (!autoPlay || slides.length <= 1) return;\n\n    intervalRef.current = setInterval(() => {\n      setCurrentIndex((prev) => {\n        const next = prev + 1;\n        return loop ? next % slides.length : Math.min(next, slides.length - 1);\n      });\n    }, autoPlayInterval);\n  }, [autoPlay, autoPlayInterval, slides.length, loop]);\n\n  const stopAutoPlay = useCallback(() => {\n    if (intervalRef.current) {\n      clearInterval(intervalRef.current);\n      intervalRef.current = undefined;\n    }\n  }, []);\n\n  // Effect for auto play\n  useEffect(() => {\n    if (isPlaying && !isDragging) {\n      startAutoPlay();\n    } else {\n      stopAutoPlay();\n    }\n\n    return stopAutoPlay;\n  }, [isPlaying, isDragging, startAutoPlay, stopAutoPlay]);\n\n  // Navigation functions\n  const goToSlide = useCallback(\n    (index: number) => {\n      let targetIndex = index;\n\n      if (loop) {\n        if (targetIndex < 0) {\n          targetIndex = slides.length - 1;\n        } else if (targetIndex >= slides.length) {\n          targetIndex = 0;\n        }\n      } else {\n        targetIndex = Math.max(0, Math.min(targetIndex, slides.length - 1));\n      }\n\n      setCurrentIndex(targetIndex);\n      onSlideChange?.(targetIndex);\n    },\n    [slides.length, loop, onSlideChange]\n  );\n\n  const nextSlide = useCallback(() => {\n    goToSlide(currentIndex + 1);\n  }, [currentIndex, goToSlide]);\n\n  const prevSlide = useCallback(() => {\n    goToSlide(currentIndex - 1);\n  }, [currentIndex, goToSlide]);\n\n  // Keyboard navigation\n  useEffect(() => {\n    const handleKeyDown = (e: KeyboardEvent) => {\n      switch (e.key) {\n        case \"ArrowLeft\":\n          if (direction === \"horizontal\") prevSlide();\n          break;\n        case \"ArrowRight\":\n          if (direction === \"horizontal\") nextSlide();\n          break;\n        case \"ArrowUp\":\n          if (direction === \"vertical\") prevSlide();\n          break;\n        case \"ArrowDown\":\n          if (direction === \"vertical\") nextSlide();\n          break;\n        case \" \":\n          e.preventDefault();\n          setIsPlaying((prev) => !prev);\n          break;\n      }\n    };\n\n    window.addEventListener(\"keydown\", handleKeyDown);\n    return () => window.removeEventListener(\"keydown\", handleKeyDown);\n  }, [direction, nextSlide, prevSlide]);\n\n  // Drag handlers\n  const handleDragEnd = (event: any, info: PanInfo) => {\n    const threshold = 50;\n    const isHorizontal = direction === \"horizontal\";\n    const velocity = isHorizontal ? info.velocity.x : info.velocity.y;\n    const offset = isHorizontal ? info.offset.x : info.offset.y;\n\n    if (Math.abs(offset) > threshold || Math.abs(velocity) > 500) {\n      if (offset > 0) {\n        prevSlide();\n      } else {\n        nextSlide();\n      }\n    }\n\n    setIsDragging(false);\n  };\n\n  // Animation variants\n  const getSlideVariants = () => {\n    const isHorizontal = direction === \"horizontal\";\n\n    switch (variant) {\n      case \"fade\":\n        return {\n          enter: { opacity: 0 },\n          center: { opacity: 1 },\n          exit: { opacity: 0 },\n        };\n      case \"scale\":\n        return {\n          enter: { opacity: 0, scale: 0.8 },\n          center: { opacity: 1, scale: 1 },\n          exit: { opacity: 0, scale: 1.2 },\n        };\n      case \"3d\":\n        return {\n          enter: {\n            rotateY: isHorizontal ? 90 : 0,\n            rotateX: isHorizontal ? 0 : 90,\n            opacity: 0,\n          },\n          center: {\n            rotateY: 0,\n            rotateX: 0,\n            opacity: 1,\n          },\n          exit: {\n            rotateY: isHorizontal ? -90 : 0,\n            rotateX: isHorizontal ? 0 : -90,\n            opacity: 0,\n          },\n        };\n      case \"stack\":\n        return {\n          enter: { scale: 0.8, y: 50, opacity: 0 },\n          center: { scale: 1, y: 0, opacity: 1 },\n          exit: { scale: 1.1, y: -50, opacity: 0 },\n        };\n      case \"coverflow\":\n        return {\n          enter: {\n            x: isHorizontal ? 300 : 0,\n            rotateY: 45,\n            scale: 0.8,\n            opacity: 0.5,\n          },\n          center: { x: 0, rotateY: 0, scale: 1, opacity: 1 },\n          exit: {\n            x: isHorizontal ? -300 : 0,\n            rotateY: -45,\n            scale: 0.8,\n            opacity: 0.5,\n          },\n        };\n      default: // slide\n        return {\n          enter: {\n            x: isHorizontal ? 300 : 0,\n            y: isHorizontal ? 0 : 300,\n            opacity: 0,\n          },\n          center: {\n            x: 0,\n            y: 0,\n            opacity: 1,\n          },\n          exit: {\n            x: isHorizontal ? -300 : 0,\n            y: isHorizontal ? 0 : -300,\n            opacity: 0,\n          },\n        };\n    }\n  };\n\n  const slideVariants = getSlideVariants();\n\n  // Hover handlers\n  const handleMouseEnter = () => {\n    if (pauseOnHover) {\n      setIsPlaying(false);\n    }\n  };\n\n  const handleMouseLeave = () => {\n    if (pauseOnHover && autoPlay) {\n      setIsPlaying(true);\n    }\n  };\n\n  return (\n    <div\n      ref={containerRef}\n      className={cn(\n        \"relative w-full h-full overflow-hidden\",\n        \"focus:outline-none focus:ring-2 focus:ring-blue-500\",\n        className\n      )}\n      onMouseEnter={handleMouseEnter}\n      onMouseLeave={handleMouseLeave}\n      tabIndex={0}\n      style={{\n        perspective:\n          variant === \"3d\" || variant === \"coverflow\" ? 1000 : undefined,\n      }}\n    >\n      {/* Slides Container */}\n      <div className=\"relative w-full h-full\">\n        <AnimatePresence mode=\"wait\" initial={false}>\n          <motion.div\n            key={currentIndex}\n            variants={slideVariants}\n            initial=\"enter\"\n            animate=\"center\"\n            exit=\"exit\"\n            transition={{\n              duration: 0.5,\n              ease: \"easeInOut\",\n            }}\n            className=\"absolute inset-0 w-full h-full\"\n            drag={draggable ? (direction === \"horizontal\" ? \"x\" : \"y\") : false}\n            dragConstraints={{ left: 0, right: 0, top: 0, bottom: 0 }}\n            dragElastic={0.2}\n            onDragStart={() => setIsDragging(true)}\n            onDragEnd={handleDragEnd}\n            onClick={() => onSlideClick?.(slides[currentIndex], currentIndex)}\n            style={{\n              transformStyle:\n                variant === \"3d\" || variant === \"coverflow\"\n                  ? \"preserve-3d\"\n                  : undefined,\n            }}\n          >\n            {/* Background Image */}\n            {slides[currentIndex]?.image && (\n              <div\n                className=\"absolute inset-0 bg-cover bg-center\"\n                style={{\n                  backgroundImage: `url(${slides[currentIndex].image})`,\n                }}\n              />\n            )}\n\n            {/* Content Overlay */}\n            <div className=\"relative z-10 w-full h-full flex items-center justify-center p-8\">\n              <div className=\"text-center\">\n                {slides[currentIndex]?.title && (\n                  <h2 className=\"text-4xl font-bold mb-4 text-white drop-shadow-lg\">\n                    {slides[currentIndex].title}\n                  </h2>\n                )}\n                {slides[currentIndex]?.description && (\n                  <p className=\"text-lg text-white/90 mb-6 drop-shadow-md\">\n                    {slides[currentIndex].description}\n                  </p>\n                )}\n                {slides[currentIndex]?.content}\n              </div>\n            </div>\n          </motion.div>\n        </AnimatePresence>\n      </div>\n\n      {/* Navigation Arrows */}\n      {showArrows && slides.length > 1 && (\n        <>\n          <button\n            onClick={prevSlide}\n            className={cn(\n              \"absolute top-1/2 left-4 transform -translate-y-1/2\",\n              \"bg-black/50 text-white p-3 rounded-full\",\n              \"hover:bg-black/75 transition-all duration-200\",\n              \"focus:outline-none focus:ring-2 focus:ring-white/50\",\n              \"disabled:opacity-50 disabled:cursor-not-allowed\"\n            )}\n            disabled={!loop && currentIndex === 0}\n            aria-label=\"Previous slide\"\n          >\n            <svg\n              className=\"w-6 h-6\"\n              fill=\"none\"\n              stroke=\"currentColor\"\n              viewBox=\"0 0 24 24\"\n            >\n              <path\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n                strokeWidth={2}\n                d=\"M15 19l-7-7 7-7\"\n              />\n            </svg>\n          </button>\n\n          <button\n            onClick={nextSlide}\n            className={cn(\n              \"absolute top-1/2 right-4 transform -translate-y-1/2\",\n              \"bg-black/50 text-white p-3 rounded-full\",\n              \"hover:bg-black/75 transition-all duration-200\",\n              \"focus:outline-none focus:ring-2 focus:ring-white/50\",\n              \"disabled:opacity-50 disabled:cursor-not-allowed\"\n            )}\n            disabled={!loop && currentIndex === slides.length - 1}\n            aria-label=\"Next slide\"\n          >\n            <svg\n              className=\"w-6 h-6\"\n              fill=\"none\"\n              stroke=\"currentColor\"\n              viewBox=\"0 0 24 24\"\n            >\n              <path\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n                strokeWidth={2}\n                d=\"M9 5l7 7-7 7\"\n              />\n            </svg>\n          </button>\n        </>\n      )}\n\n      {/* Indicators */}\n      {showIndicators && slides.length > 1 && (\n        <div className=\"absolute bottom-4 left-1/2 transform -translate-x-1/2 flex gap-2\">\n          {slides.map((_, index) => (\n            <button\n              key={index}\n              onClick={() => goToSlide(index)}\n              className={cn(\n                \"w-3 h-3 rounded-full transition-all duration-200\",\n                \"focus:outline-none focus:ring-2 focus:ring-white/50\",\n                index === currentIndex\n                  ? \"bg-white scale-125\"\n                  : \"bg-white/50 hover:bg-white/75\"\n              )}\n              aria-label={`Go to slide ${index + 1}`}\n            />\n          ))}\n        </div>\n      )}\n\n      {/* Play/Pause Button */}\n      {autoPlay && (\n        <button\n          onClick={() => setIsPlaying((prev) => !prev)}\n          className={cn(\n            \"absolute top-4 right-4 bg-black/50 text-white p-2 rounded-full\",\n            \"hover:bg-black/75 transition-all duration-200\",\n            \"focus:outline-none focus:ring-2 focus:ring-white/50\"\n          )}\n          aria-label={isPlaying ? \"Pause slideshow\" : \"Play slideshow\"}\n        >\n          {isPlaying ? (\n            <svg className=\"w-4 h-4\" fill=\"currentColor\" viewBox=\"0 0 24 24\">\n              <path d=\"M6 4h4v16H6V4zm8 0h4v16h-4V4z\" />\n            </svg>\n          ) : (\n            <svg className=\"w-4 h-4\" fill=\"currentColor\" viewBox=\"0 0 24 24\">\n              <path d=\"M8 5v14l11-7z\" />\n            </svg>\n          )}\n        </button>\n      )}\n\n      {/* Progress Bar */}\n      {autoPlay && isPlaying && (\n        <div className=\"absolute bottom-0 left-0 w-full h-1 bg-white/20\">\n          <motion.div\n            className=\"h-full bg-white\"\n            initial={{ width: \"0%\" }}\n            animate={{ width: \"100%\" }}\n            transition={{\n              duration: autoPlayInterval / 1000,\n              ease: \"linear\",\n              repeat: Infinity,\n            }}\n          />\n        </div>\n      )}\n    </div>\n  );\n}\n","import { cn } from \"@tuel/utils\";\nimport { AnimatePresence, motion } from \"framer-motion\";\nimport { useRef, useState } from \"react\";\n\nexport interface VideoItem {\n  id: string;\n  src: string;\n  poster?: string;\n  title?: string;\n  description?: string;\n  duration?: string;\n  type?: \"mp4\" | \"webm\" | \"ogg\" | \"youtube\" | \"vimeo\";\n  thumbnail?: string;\n}\n\nexport interface VideoGalleryProps {\n  videos: VideoItem[];\n  className?: string;\n  layout?: \"grid\" | \"list\" | \"carousel\";\n  columns?: number;\n  gap?: number;\n  autoPlay?: boolean;\n  controls?: boolean;\n  muted?: boolean;\n  loop?: boolean;\n  preload?: \"none\" | \"metadata\" | \"auto\";\n  aspectRatio?: \"16/9\" | \"4/3\" | \"1/1\" | \"auto\";\n  showThumbnails?: boolean;\n  lightbox?: boolean;\n  onVideoSelect?: (video: VideoItem, index: number) => void;\n  onVideoPlay?: (video: VideoItem, index: number) => void;\n  onVideoEnd?: (video: VideoItem, index: number) => void;\n}\n\nexport function VideoGallery({\n  videos,\n  className,\n  layout = \"grid\",\n  columns = 3,\n  gap = 16,\n  autoPlay = false,\n  controls = true,\n  muted = true,\n  loop = false,\n  preload = \"metadata\",\n  aspectRatio = \"16/9\",\n  showThumbnails = true,\n  lightbox = true,\n  onVideoSelect,\n  onVideoPlay,\n  onVideoEnd,\n}: VideoGalleryProps) {\n  const [selectedVideo, setSelectedVideo] = useState<VideoItem | null>(null);\n  const [playingVideo, setPlayingVideo] = useState<string | null>(null);\n  const [loadedVideos, setLoadedVideos] = useState<Set<string>>(new Set());\n  const videoRefs = useRef<Map<string, HTMLVideoElement>>(new Map());\n\n  // Layout styles\n  const getLayoutStyles = () => {\n    switch (layout) {\n      case \"grid\":\n        return {\n          display: \"grid\",\n          gridTemplateColumns: `repeat(auto-fill, minmax(${Math.floor(\n            300 / columns\n          )}px, 1fr))`,\n          gap: `${gap}px`,\n        };\n      case \"list\":\n        return {\n          display: \"flex\",\n          flexDirection: \"column\" as const,\n          gap: `${gap}px`,\n        };\n      case \"carousel\":\n        return {\n          display: \"flex\",\n          gap: `${gap}px`,\n          overflowX: \"auto\" as const,\n          scrollSnapType: \"x mandatory\" as const,\n        };\n      default:\n        return {};\n    }\n  };\n\n  // Aspect ratio class\n  const getAspectRatioClass = () => {\n    switch (aspectRatio) {\n      case \"16/9\":\n        return \"aspect-video\";\n      case \"4/3\":\n        return \"aspect-[4/3]\";\n      case \"1/1\":\n        return \"aspect-square\";\n      default:\n        return \"\";\n    }\n  };\n\n  // Video type detection\n  const getVideoType = (video: VideoItem) => {\n    if (video.type) return video.type;\n\n    const url = video.src.toLowerCase();\n    if (url.includes(\"youtube.com\") || url.includes(\"youtu.be\"))\n      return \"youtube\";\n    if (url.includes(\"vimeo.com\")) return \"vimeo\";\n    if (url.endsWith(\".webm\")) return \"webm\";\n    if (url.endsWith(\".ogg\")) return \"ogg\";\n    return \"mp4\";\n  };\n\n  // Extract video ID for embeds\n  const getVideoId = (video: VideoItem) => {\n    const type = getVideoType(video);\n    const url = video.src;\n\n    if (type === \"youtube\") {\n      const match = url.match(\n        /(?:youtube\\.com\\/watch\\?v=|youtu\\.be\\/)([^&\\n?#]+)/\n      );\n      return match ? match[1] : null;\n    }\n\n    if (type === \"vimeo\") {\n      const match = url.match(/vimeo\\.com\\/(\\d+)/);\n      return match ? match[1] : null;\n    }\n\n    return null;\n  };\n\n  // Video handlers\n  const handleVideoClick = (video: VideoItem, index: number) => {\n    if (lightbox) {\n      setSelectedVideo(video);\n    }\n    onVideoSelect?.(video, index);\n  };\n\n  const handleVideoPlay = (video: VideoItem, index: number) => {\n    setPlayingVideo(video.id);\n    onVideoPlay?.(video, index);\n  };\n\n  const handleVideoEnd = (video: VideoItem, index: number) => {\n    setPlayingVideo(null);\n    onVideoEnd?.(video, index);\n  };\n\n  const handleVideoLoad = (videoId: string) => {\n    setLoadedVideos((prev) => new Set(prev).add(videoId));\n  };\n\n  // Pause all videos except the current one\n  const pauseOtherVideos = (currentVideoId: string) => {\n    videoRefs.current.forEach((video, videoId) => {\n      if (videoId !== currentVideoId && !video.paused) {\n        video.pause();\n      }\n    });\n  };\n\n  // Render video element based on type\n  const renderVideo = (video: VideoItem, index: number) => {\n    const videoType = getVideoType(video);\n    const videoId = getVideoId(video);\n\n    if (videoType === \"youtube\" && videoId) {\n      return (\n        <iframe\n          src={`https://www.youtube.com/embed/${videoId}?rel=0&modestbranding=1${\n            autoPlay ? \"&autoplay=1\" : \"\"\n          }${muted ? \"&mute=1\" : \"\"}`}\n          className=\"w-full h-full\"\n          frameBorder=\"0\"\n          allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n          allowFullScreen\n          title={video.title || `Video ${index + 1}`}\n        />\n      );\n    }\n\n    if (videoType === \"vimeo\" && videoId) {\n      return (\n        <iframe\n          src={`https://player.vimeo.com/video/${videoId}?badge=0&autopause=0&player_id=0&app_id=58479${\n            autoPlay ? \"&autoplay=1\" : \"\"\n          }${muted ? \"&muted=1\" : \"\"}`}\n          className=\"w-full h-full\"\n          frameBorder=\"0\"\n          allow=\"autoplay; fullscreen; picture-in-picture\"\n          allowFullScreen\n          title={video.title || `Video ${index + 1}`}\n        />\n      );\n    }\n\n    // Native video element\n    return (\n      <video\n        ref={(el) => {\n          if (el) videoRefs.current.set(video.id, el);\n        }}\n        className=\"w-full h-full object-cover\"\n        poster={video.poster || video.thumbnail}\n        controls={controls}\n        autoPlay={autoPlay}\n        muted={muted}\n        loop={loop}\n        preload={preload}\n        onPlay={() => {\n          handleVideoPlay(video, index);\n          pauseOtherVideos(video.id);\n        }}\n        onEnded={() => handleVideoEnd(video, index)}\n        onLoadedMetadata={() => handleVideoLoad(video.id)}\n      >\n        <source src={video.src} type={`video/${videoType}`} />\n        Your browser does not support the video tag.\n      </video>\n    );\n  };\n\n  return (\n    <>\n      <div className={cn(\"video-gallery\", className)} style={getLayoutStyles()}>\n        {videos.map((video, index) => (\n          <motion.div\n            key={video.id}\n            initial={{ opacity: 0, scale: 0.9 }}\n            animate={{ opacity: 1, scale: 1 }}\n            exit={{ opacity: 0, scale: 0.9 }}\n            transition={{ delay: index * 0.1 }}\n            className={cn(\n              \"video-item relative cursor-pointer group\",\n              \"rounded-lg overflow-hidden bg-black\",\n              getAspectRatioClass(),\n              layout === \"carousel\" && \"flex-shrink-0 w-80\"\n            )}\n            onClick={() => handleVideoClick(video, index)}\n          >\n            {/* Video Element */}\n            <div className=\"w-full h-full\">{renderVideo(video, index)}</div>\n\n            {/* Play Overlay for Thumbnails */}\n            {showThumbnails && !loadedVideos.has(video.id) && (\n              <div className=\"absolute inset-0 flex items-center justify-center bg-black/50 group-hover:bg-black/30 transition-colors\">\n                <div className=\"w-16 h-16 bg-white/90 rounded-full flex items-center justify-center group-hover:scale-110 transition-transform\">\n                  <svg\n                    className=\"w-6 h-6 text-black ml-1\"\n                    fill=\"currentColor\"\n                    viewBox=\"0 0 24 24\"\n                  >\n                    <path d=\"M8 5v14l11-7z\" />\n                  </svg>\n                </div>\n              </div>\n            )}\n\n            {/* Video Info Overlay */}\n            {(video.title || video.description || video.duration) && (\n              <div className=\"absolute bottom-0 left-0 right-0 bg-gradient-to-t from-black/80 to-transparent p-4 opacity-0 group-hover:opacity-100 transition-opacity\">\n                <div className=\"text-white\">\n                  {video.title && (\n                    <h3 className=\"font-semibold text-lg mb-1 line-clamp-1\">\n                      {video.title}\n                    </h3>\n                  )}\n                  {video.description && (\n                    <p className=\"text-sm text-gray-300 mb-2 line-clamp-2\">\n                      {video.description}\n                    </p>\n                  )}\n                  {video.duration && (\n                    <span className=\"text-xs bg-black/50 px-2 py-1 rounded\">\n                      {video.duration}\n                    </span>\n                  )}\n                </div>\n              </div>\n            )}\n\n            {/* Playing Indicator */}\n            {playingVideo === video.id && (\n              <div className=\"absolute top-2 right-2 bg-red-500 text-white px-2 py-1 rounded text-xs font-medium\">\n                PLAYING\n              </div>\n            )}\n          </motion.div>\n        ))}\n      </div>\n\n      {/* Lightbox Modal */}\n      {lightbox && (\n        <AnimatePresence>\n          {selectedVideo && (\n            <motion.div\n              initial={{ opacity: 0 }}\n              animate={{ opacity: 1 }}\n              exit={{ opacity: 0 }}\n              className=\"fixed inset-0 z-50 bg-black/90 flex items-center justify-center p-8\"\n              onClick={() => setSelectedVideo(null)}\n            >\n              <motion.div\n                initial={{ scale: 0.8 }}\n                animate={{ scale: 1 }}\n                exit={{ scale: 0.8 }}\n                className=\"relative w-full max-w-4xl aspect-video bg-black rounded-lg overflow-hidden\"\n                onClick={(e) => e.stopPropagation()}\n              >\n                {renderVideo(\n                  selectedVideo,\n                  videos.findIndex((v) => v.id === selectedVideo.id)\n                )}\n\n                {/* Close Button */}\n                <button\n                  className=\"absolute top-4 right-4 text-white text-2xl hover:text-gray-300 transition-colors z-10\"\n                  onClick={() => setSelectedVideo(null)}\n                >\n                  ×\n                </button>\n\n                {/* Video Info */}\n                {(selectedVideo.title || selectedVideo.description) && (\n                  <div className=\"absolute bottom-4 left-4 text-white z-10\">\n                    {selectedVideo.title && (\n                      <h3 className=\"text-xl font-bold mb-2\">\n                        {selectedVideo.title}\n                      </h3>\n                    )}\n                    {selectedVideo.description && (\n                      <p className=\"text-gray-300\">\n                        {selectedVideo.description}\n                      </p>\n                    )}\n                  </div>\n                )}\n              </motion.div>\n            </motion.div>\n          )}\n        </AnimatePresence>\n      )}\n    </>\n  );\n}\n","import { cn } from \"@tuel/utils\";\nimport { AnimatePresence, motion } from \"framer-motion\";\nimport { useRef, useState } from \"react\";\n\nexport interface MediaItem {\n  id: string;\n  type: \"image\" | \"video\" | \"audio\";\n  src: string;\n  thumbnail?: string;\n  poster?: string;\n  title?: string;\n  description?: string;\n  duration?: string;\n  size?: { width: number; height: number };\n  alt?: string;\n}\n\nexport interface MediaGridProps {\n  media: MediaItem[];\n  className?: string;\n  layout?: \"grid\" | \"masonry\" | \"justified\" | \"pinterest\";\n  columns?: number;\n  gap?: number;\n  aspectRatio?: \"auto\" | \"square\" | \"4/3\" | \"16/9\";\n  lightbox?: boolean;\n  autoPlay?: boolean;\n  lazy?: boolean;\n  showOverlay?: boolean;\n  filterType?: \"all\" | \"image\" | \"video\" | \"audio\";\n  sortBy?: \"none\" | \"title\" | \"type\" | \"date\";\n  onMediaClick?: (item: MediaItem, index: number) => void;\n  onFilterChange?: (filter: \"all\" | \"image\" | \"video\" | \"audio\") => void;\n}\n\nexport function MediaGrid({\n  media,\n  className,\n  layout = \"grid\",\n  columns = 3,\n  gap = 16,\n  aspectRatio = \"auto\",\n  lightbox = true,\n  autoPlay = false,\n  lazy = true,\n  showOverlay = true,\n  filterType = \"all\",\n  sortBy = \"none\",\n  onMediaClick,\n  onFilterChange,\n}: MediaGridProps) {\n  const [selectedMedia, setSelectedMedia] = useState<MediaItem | null>(null);\n  const [currentFilter, setCurrentFilter] = useState(filterType);\n  const [loadedItems, setLoadedItems] = useState<Set<string>>(new Set());\n  const gridRef = useRef<HTMLDivElement>(null);\n\n  // Filter and sort media\n  const filteredMedia = media\n    .filter((item) => currentFilter === \"all\" || item.type === currentFilter)\n    .sort((a, b) => {\n      switch (sortBy) {\n        case \"title\":\n          return (a.title || \"\").localeCompare(b.title || \"\");\n        case \"type\":\n          return a.type.localeCompare(b.type);\n        default:\n          return 0;\n      }\n    });\n\n  // Layout styles\n  const getLayoutStyles = () => {\n    switch (layout) {\n      case \"grid\":\n        return {\n          display: \"grid\",\n          gridTemplateColumns: `repeat(auto-fill, minmax(${Math.floor(\n            300 / columns\n          )}px, 1fr))`,\n          gap: `${gap}px`,\n        };\n      case \"masonry\":\n        return {\n          columnCount: columns,\n          columnGap: `${gap}px`,\n        };\n      case \"justified\":\n        return {\n          display: \"flex\",\n          flexWrap: \"wrap\" as const,\n          gap: `${gap}px`,\n        };\n      case \"pinterest\":\n        return {\n          display: \"grid\",\n          gridTemplateColumns: `repeat(auto-fill, minmax(250px, 1fr))`,\n          gridAutoRows: \"10px\",\n          gap: `${gap}px`,\n        };\n      default:\n        return {};\n    }\n  };\n\n  // Aspect ratio class\n  const getAspectRatioClass = () => {\n    if (aspectRatio === \"auto\") return \"\";\n    switch (aspectRatio) {\n      case \"square\":\n        return \"aspect-square\";\n      case \"4/3\":\n        return \"aspect-[4/3]\";\n      case \"16/9\":\n        return \"aspect-video\";\n      default:\n        return \"\";\n    }\n  };\n\n  // Media type icon\n  const getMediaTypeIcon = (type: string) => {\n    switch (type) {\n      case \"video\":\n        return (\n          <svg className=\"w-6 h-6\" fill=\"currentColor\" viewBox=\"0 0 24 24\">\n            <path d=\"M8 5v14l11-7z\" />\n          </svg>\n        );\n      case \"audio\":\n        return (\n          <svg className=\"w-6 h-6\" fill=\"currentColor\" viewBox=\"0 0 24 24\">\n            <path d=\"M12 3v10.55c-.59-.34-1.27-.55-2-.55-2.21 0-4 1.79-4 4s1.79 4 4 4 4-1.79 4-4V7h4V3h-6z\" />\n          </svg>\n        );\n      default:\n        return (\n          <svg className=\"w-6 h-6\" fill=\"currentColor\" viewBox=\"0 0 24 24\">\n            <path d=\"M21 19V5c0-1.1-.9-2-2-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2zM8.5 13.5l2.5 3.01L14.5 12l4.5 6H5l3.5-4.5z\" />\n          </svg>\n        );\n    }\n  };\n\n  // Handle media click\n  const handleMediaClick = (item: MediaItem, index: number) => {\n    if (lightbox) {\n      setSelectedMedia(item);\n    }\n    onMediaClick?.(item, index);\n  };\n\n  // Handle filter change\n  const handleFilterChange = (filter: \"all\" | \"image\" | \"video\" | \"audio\") => {\n    setCurrentFilter(filter);\n    onFilterChange?.(filter);\n  };\n\n  // Handle item load\n  const handleItemLoad = (itemId: string) => {\n    setLoadedItems((prev) => new Set(prev).add(itemId));\n  };\n\n  // Render media item based on type\n  const renderMediaItem = (item: MediaItem, index: number) => {\n    switch (item.type) {\n      case \"video\":\n        return (\n          <video\n            className=\"w-full h-full object-cover\"\n            poster={item.poster || item.thumbnail}\n            controls={!lightbox}\n            autoPlay={autoPlay}\n            muted\n            loop\n            preload=\"metadata\"\n            onLoadedMetadata={() => handleItemLoad(item.id)}\n          >\n            <source src={item.src} type=\"video/mp4\" />\n          </video>\n        );\n      case \"audio\":\n        return (\n          <div className=\"w-full h-full bg-gradient-to-br from-purple-500 to-pink-500 flex items-center justify-center\">\n            <div className=\"text-center text-white p-4\">\n              <div className=\"w-16 h-16 bg-white/20 rounded-full flex items-center justify-center mx-auto mb-4\">\n                {getMediaTypeIcon(\"audio\")}\n              </div>\n              {item.title && (\n                <h4 className=\"font-semibold mb-2\">{item.title}</h4>\n              )}\n              {item.duration && (\n                <p className=\"text-sm opacity-75\">{item.duration}</p>\n              )}\n            </div>\n            <audio\n              className=\"absolute bottom-2 left-2 right-2 opacity-75\"\n              controls\n              preload=\"metadata\"\n              onLoadedMetadata={() => handleItemLoad(item.id)}\n            >\n              <source src={item.src} type=\"audio/mpeg\" />\n            </audio>\n          </div>\n        );\n      default: // image\n        return (\n          <img\n            src={item.src}\n            alt={item.alt || item.title || `Media item ${index + 1}`}\n            className={cn(\n              \"w-full h-full object-cover transition-all duration-300\",\n              !loadedItems.has(item.id) && lazy && \"opacity-0\"\n            )}\n            loading={lazy ? \"lazy\" : \"eager\"}\n            onLoad={() => handleItemLoad(item.id)}\n          />\n        );\n    }\n  };\n\n  // Get unique media types for filter\n  const mediaTypes = [...new Set(media.map((item) => item.type))];\n\n  return (\n    <>\n      {/* Filter Controls */}\n      {mediaTypes.length > 1 && (\n        <div className=\"flex gap-2 mb-6 flex-wrap\">\n          <button\n            onClick={() => handleFilterChange(\"all\")}\n            className={cn(\n              \"px-4 py-2 rounded-lg text-sm font-medium transition-colors\",\n              currentFilter === \"all\"\n                ? \"bg-blue-500 text-white\"\n                : \"bg-gray-200 text-gray-700 hover:bg-gray-300\"\n            )}\n          >\n            All ({media.length})\n          </button>\n          {mediaTypes.map((type) => {\n            const count = media.filter((item) => item.type === type).length;\n            return (\n              <button\n                key={type}\n                onClick={() => handleFilterChange(type)}\n                className={cn(\n                  \"px-4 py-2 rounded-lg text-sm font-medium transition-colors capitalize\",\n                  currentFilter === type\n                    ? \"bg-blue-500 text-white\"\n                    : \"bg-gray-200 text-gray-700 hover:bg-gray-300\"\n                )}\n              >\n                {type} ({count})\n              </button>\n            );\n          })}\n        </div>\n      )}\n\n      {/* Media Grid */}\n      <div\n        ref={gridRef}\n        className={cn(\"media-grid\", className)}\n        style={getLayoutStyles()}\n      >\n        {filteredMedia.map((item, index) => (\n          <motion.div\n            key={item.id}\n            initial={{ opacity: 0, scale: 0.9 }}\n            animate={{ opacity: 1, scale: 1 }}\n            exit={{ opacity: 0, scale: 0.9 }}\n            transition={{ delay: index * 0.05 }}\n            className={cn(\n              \"media-item relative cursor-pointer group\",\n              \"rounded-lg overflow-hidden bg-gray-100\",\n              getAspectRatioClass(),\n              layout === \"masonry\" && \"break-inside-avoid mb-4\"\n            )}\n            onClick={() => handleMediaClick(item, index)}\n            style={\n              layout === \"pinterest\" && item.size\n                ? { gridRowEnd: `span ${Math.ceil(item.size.height / 10)}` }\n                : undefined\n            }\n          >\n            {/* Media Content */}\n            <div className=\"w-full h-full\">{renderMediaItem(item, index)}</div>\n\n            {/* Media Type Badge */}\n            <div className=\"absolute top-2 left-2 bg-black/50 text-white px-2 py-1 rounded text-xs font-medium flex items-center gap-1\">\n              <span className=\"w-3 h-3\">{getMediaTypeIcon(item.type)}</span>\n              {item.type.toUpperCase()}\n            </div>\n\n            {/* Duration Badge */}\n            {item.duration && (\n              <div className=\"absolute top-2 right-2 bg-black/50 text-white px-2 py-1 rounded text-xs\">\n                {item.duration}\n              </div>\n            )}\n\n            {/* Overlay */}\n            {showOverlay && (item.title || item.description) && (\n              <div className=\"absolute inset-0 bg-gradient-to-t from-black/70 to-transparent opacity-0 group-hover:opacity-100 transition-opacity flex items-end p-4\">\n                <div className=\"text-white\">\n                  {item.title && (\n                    <h3 className=\"font-semibold text-lg mb-1 line-clamp-1\">\n                      {item.title}\n                    </h3>\n                  )}\n                  {item.description && (\n                    <p className=\"text-sm text-gray-300 line-clamp-2\">\n                      {item.description}\n                    </p>\n                  )}\n                </div>\n              </div>\n            )}\n\n            {/* Hover Effect */}\n            <div className=\"absolute inset-0 bg-black/0 group-hover:bg-black/20 transition-colors flex items-center justify-center\">\n              <div className=\"opacity-0 group-hover:opacity-100 transition-opacity\">\n                <div className=\"w-12 h-12 bg-white/90 rounded-full flex items-center justify-center\">\n                  {getMediaTypeIcon(item.type)}\n                </div>\n              </div>\n            </div>\n          </motion.div>\n        ))}\n      </div>\n\n      {/* Lightbox */}\n      {lightbox && (\n        <AnimatePresence>\n          {selectedMedia && (\n            <motion.div\n              initial={{ opacity: 0 }}\n              animate={{ opacity: 1 }}\n              exit={{ opacity: 0 }}\n              className=\"fixed inset-0 z-50 bg-black/90 flex items-center justify-center p-8\"\n              onClick={() => setSelectedMedia(null)}\n            >\n              <motion.div\n                initial={{ scale: 0.8 }}\n                animate={{ scale: 1 }}\n                exit={{ scale: 0.8 }}\n                className=\"relative max-w-4xl max-h-full bg-black rounded-lg overflow-hidden\"\n                onClick={(e: React.MouseEvent) => e.stopPropagation()}\n              >\n                {/* Media Content */}\n                <div className=\"w-full h-full\">\n                  {selectedMedia.type === \"video\" && (\n                    <video\n                      className=\"w-full h-full\"\n                      controls\n                      autoPlay\n                      poster={selectedMedia.poster}\n                    >\n                      <source src={selectedMedia.src} type=\"video/mp4\" />\n                    </video>\n                  )}\n                  {selectedMedia.type === \"image\" && (\n                    <img\n                      src={selectedMedia.src}\n                      alt={\n                        selectedMedia.alt || selectedMedia.title || \"Media item\"\n                      }\n                      className=\"w-full h-full object-contain\"\n                    />\n                  )}\n                  {selectedMedia.type === \"audio\" && (\n                    <div className=\"p-8 text-center\">\n                      <div className=\"w-32 h-32 bg-gradient-to-br from-purple-500 to-pink-500 rounded-full flex items-center justify-center mx-auto mb-6\">\n                        <div className=\"w-16 h-16 text-white\">\n                          {getMediaTypeIcon(\"audio\")}\n                        </div>\n                      </div>\n                      {selectedMedia.title && (\n                        <h3 className=\"text-2xl font-bold text-white mb-4\">\n                          {selectedMedia.title}\n                        </h3>\n                      )}\n                      <audio className=\"w-full\" controls autoPlay>\n                        <source src={selectedMedia.src} type=\"audio/mpeg\" />\n                      </audio>\n                    </div>\n                  )}\n                </div>\n\n                {/* Close Button */}\n                <button\n                  className=\"absolute top-4 right-4 text-white text-2xl hover:text-gray-300 transition-colors z-10\"\n                  onClick={() => setSelectedMedia(null)}\n                >\n                  ×\n                </button>\n\n                {/* Media Info */}\n                {(selectedMedia.title || selectedMedia.description) &&\n                  selectedMedia.type !== \"audio\" && (\n                    <div className=\"absolute bottom-4 left-4 text-white z-10\">\n                      {selectedMedia.title && (\n                        <h3 className=\"text-xl font-bold mb-2\">\n                          {selectedMedia.title}\n                        </h3>\n                      )}\n                      {selectedMedia.description && (\n                        <p className=\"text-gray-300\">\n                          {selectedMedia.description}\n                        </p>\n                      )}\n                    </div>\n                  )}\n              </motion.div>\n            </motion.div>\n          )}\n        </AnimatePresence>\n      )}\n    </>\n  );\n}\n"],"mappings":"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","names":["import_utils","import_framer_motion","import_react","import_jsx_runtime","import_utils","import_framer_motion","import_react","import_jsx_runtime","import_utils","import_framer_motion","import_react","import_jsx_runtime"]}