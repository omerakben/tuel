name: Automated Release

on:
  push:
    branches: [main]
    paths:
      - "packages/**/package.json"
      - "packages/**/CHANGELOG.md"
      - ".changeset/**/*.md"

env:
  NODE_VERSION: "20"
  PNPM_VERSION: "8"

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: ${{ env.PNPM_VERSION }}

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - name: Setup pnpm cache
        uses: actions/cache@v3
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build packages
        run: pnpm build

      - name: Run tests
        run: pnpm test:all

      - name: Check for changesets
        id: changesets
        run: |
          if pnpm changeset status --since HEAD~1 | grep -q "No changesets present"; then
            echo "has-changesets=false" >> $GITHUB_OUTPUT
          else
            echo "has-changesets=true" >> $GITHUB_OUTPUT
          fi

      - name: Create Release Pull Request or Publish to npm
        if: steps.changesets.outputs.has-changesets == 'true'
        uses: changesets/action@v1
        with:
          publish: pnpm release
          version: pnpm changeset:version
          commit: "chore: release packages"
          title: "chore: release packages"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Generate release notes
        if: steps.changesets.outputs.has-changesets == 'true'
        run: |
          pnpm changeset:version
          pnpm release:notes

      - name: Create GitHub Release
        if: steps.changesets.outputs.has-changesets == 'true'
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          release_name: Release ${{ github.ref_name }}
          body_path: RELEASE_NOTES.md
          draft: false
          prerelease: false

      - name: Update documentation
        if: steps.changesets.outputs.has-changesets == 'true'
        run: |
          pnpm docs:generate
          pnpm docs:deploy

      - name: Notify team
        if: steps.changesets.outputs.has-changesets == 'true'
        run: |
          echo "ðŸŽ‰ New release ${{ github.ref_name }} published!"
          # Add Slack/Discord notification here
